(* ::Package:: *)

(* ::Input:: *)
(*(*Algorithm: 1. Decompose element into list containing each digit*)
(*2.Check if the length of decomposition is only 1 *)
(*3. Check if the next term in the list are same (except last digit)*)
(*4. For last digit, check the previous digit*)*)
(*NextTerm[int_]:=Module[{count=1,digits,output={}},*)
(*digits=IntegerDigits[int];*)
(*If[Length[digits]==1,output={1,int},*)
(*Do[*)
(*If[i==Length[digits],*)
(*If[digits[[i]]==digits[[i-1]], output=Join[output,{count,digits[[i]]}],output=Join[output,{1,digits[[i]]}]],*)
(*If[digits[[i]]==digits[[i+1]],count++,output=Join[output,{count,digits[[i]]}];count=1]],{i,Length[digits]}]];*)
(*FromDigits[output]];*)
(*LookAndSay[N_]:=NestList[NextTerm,1,N-1];*)
(*LookAndSay[12]*)
(**)
